/*
 * Open Graph API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OpenGraphIdentitySet struct for OpenGraphIdentitySet
type OpenGraphIdentitySet struct {
	// Optional. The application associated with this action.
	Application NullableAnyOfopenGraphIdentity `json:"application,omitempty"`
	// Optional. The device associated with this action.
	Device NullableAnyOfopenGraphIdentity `json:"device,omitempty"`
	// Optional. The user associated with this action.
	User NullableAnyOfopenGraphIdentity `json:"user,omitempty"`
}

// NewOpenGraphIdentitySet instantiates a new OpenGraphIdentitySet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenGraphIdentitySet() *OpenGraphIdentitySet {
	this := OpenGraphIdentitySet{}
	return &this
}

// NewOpenGraphIdentitySetWithDefaults instantiates a new OpenGraphIdentitySet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenGraphIdentitySetWithDefaults() *OpenGraphIdentitySet {
	this := OpenGraphIdentitySet{}
	return &this
}

// GetApplication returns the Application field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenGraphIdentitySet) GetApplication() AnyOfopenGraphIdentity {
	if o == nil || o.Application.Get() == nil {
		var ret AnyOfopenGraphIdentity
		return ret
	}
	return *o.Application.Get()
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenGraphIdentitySet) GetApplicationOk() (*AnyOfopenGraphIdentity, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Application.Get(), o.Application.IsSet()
}

// HasApplication returns a boolean if a field has been set.
func (o *OpenGraphIdentitySet) HasApplication() bool {
	if o != nil && o.Application.IsSet() {
		return true
	}

	return false
}

// SetApplication gets a reference to the given NullableAnyOfopenGraphIdentity and assigns it to the Application field.
func (o *OpenGraphIdentitySet) SetApplication(v AnyOfopenGraphIdentity) {
	o.Application.Set(&v)
}
// SetApplicationNil sets the value for Application to be an explicit nil
func (o *OpenGraphIdentitySet) SetApplicationNil() {
	o.Application.Set(nil)
}

// UnsetApplication ensures that no value is present for Application, not even an explicit nil
func (o *OpenGraphIdentitySet) UnsetApplication() {
	o.Application.Unset()
}

// GetDevice returns the Device field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenGraphIdentitySet) GetDevice() AnyOfopenGraphIdentity {
	if o == nil || o.Device.Get() == nil {
		var ret AnyOfopenGraphIdentity
		return ret
	}
	return *o.Device.Get()
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenGraphIdentitySet) GetDeviceOk() (*AnyOfopenGraphIdentity, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Device.Get(), o.Device.IsSet()
}

// HasDevice returns a boolean if a field has been set.
func (o *OpenGraphIdentitySet) HasDevice() bool {
	if o != nil && o.Device.IsSet() {
		return true
	}

	return false
}

// SetDevice gets a reference to the given NullableAnyOfopenGraphIdentity and assigns it to the Device field.
func (o *OpenGraphIdentitySet) SetDevice(v AnyOfopenGraphIdentity) {
	o.Device.Set(&v)
}
// SetDeviceNil sets the value for Device to be an explicit nil
func (o *OpenGraphIdentitySet) SetDeviceNil() {
	o.Device.Set(nil)
}

// UnsetDevice ensures that no value is present for Device, not even an explicit nil
func (o *OpenGraphIdentitySet) UnsetDevice() {
	o.Device.Unset()
}

// GetUser returns the User field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenGraphIdentitySet) GetUser() AnyOfopenGraphIdentity {
	if o == nil || o.User.Get() == nil {
		var ret AnyOfopenGraphIdentity
		return ret
	}
	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenGraphIdentitySet) GetUserOk() (*AnyOfopenGraphIdentity, bool) {
	if o == nil  {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// HasUser returns a boolean if a field has been set.
func (o *OpenGraphIdentitySet) HasUser() bool {
	if o != nil && o.User.IsSet() {
		return true
	}

	return false
}

// SetUser gets a reference to the given NullableAnyOfopenGraphIdentity and assigns it to the User field.
func (o *OpenGraphIdentitySet) SetUser(v AnyOfopenGraphIdentity) {
	o.User.Set(&v)
}
// SetUserNil sets the value for User to be an explicit nil
func (o *OpenGraphIdentitySet) SetUserNil() {
	o.User.Set(nil)
}

// UnsetUser ensures that no value is present for User, not even an explicit nil
func (o *OpenGraphIdentitySet) UnsetUser() {
	o.User.Unset()
}

func (o OpenGraphIdentitySet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Application.IsSet() {
		toSerialize["application"] = o.Application.Get()
	}
	if o.Device.IsSet() {
		toSerialize["device"] = o.Device.Get()
	}
	if o.User.IsSet() {
		toSerialize["user"] = o.User.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOpenGraphIdentitySet struct {
	value *OpenGraphIdentitySet
	isSet bool
}

func (v NullableOpenGraphIdentitySet) Get() *OpenGraphIdentitySet {
	return v.value
}

func (v *NullableOpenGraphIdentitySet) Set(val *OpenGraphIdentitySet) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenGraphIdentitySet) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenGraphIdentitySet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenGraphIdentitySet(val *OpenGraphIdentitySet) *NullableOpenGraphIdentitySet {
	return &NullableOpenGraphIdentitySet{value: val, isSet: true}
}

func (v NullableOpenGraphIdentitySet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenGraphIdentitySet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


