/*
 * Open Graph API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// OpenGraphDirectoryObject struct for OpenGraphDirectoryObject
type OpenGraphDirectoryObject struct {
	OpenGraphEntity
	DeletedDateTime NullableTime `json:"deletedDateTime,omitempty"`
}

// NewOpenGraphDirectoryObject instantiates a new OpenGraphDirectoryObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenGraphDirectoryObject() *OpenGraphDirectoryObject {
	this := OpenGraphDirectoryObject{}
	return &this
}

// NewOpenGraphDirectoryObjectWithDefaults instantiates a new OpenGraphDirectoryObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenGraphDirectoryObjectWithDefaults() *OpenGraphDirectoryObject {
	this := OpenGraphDirectoryObject{}
	return &this
}

// GetDeletedDateTime returns the DeletedDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenGraphDirectoryObject) GetDeletedDateTime() time.Time {
	if o == nil || o.DeletedDateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletedDateTime.Get()
}

// GetDeletedDateTimeOk returns a tuple with the DeletedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenGraphDirectoryObject) GetDeletedDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DeletedDateTime.Get(), o.DeletedDateTime.IsSet()
}

// HasDeletedDateTime returns a boolean if a field has been set.
func (o *OpenGraphDirectoryObject) HasDeletedDateTime() bool {
	if o != nil && o.DeletedDateTime.IsSet() {
		return true
	}

	return false
}

// SetDeletedDateTime gets a reference to the given NullableTime and assigns it to the DeletedDateTime field.
func (o *OpenGraphDirectoryObject) SetDeletedDateTime(v time.Time) {
	o.DeletedDateTime.Set(&v)
}
// SetDeletedDateTimeNil sets the value for DeletedDateTime to be an explicit nil
func (o *OpenGraphDirectoryObject) SetDeletedDateTimeNil() {
	o.DeletedDateTime.Set(nil)
}

// UnsetDeletedDateTime ensures that no value is present for DeletedDateTime, not even an explicit nil
func (o *OpenGraphDirectoryObject) UnsetDeletedDateTime() {
	o.DeletedDateTime.Unset()
}

func (o OpenGraphDirectoryObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedOpenGraphEntity, errOpenGraphEntity := json.Marshal(o.OpenGraphEntity)
	if errOpenGraphEntity != nil {
		return []byte{}, errOpenGraphEntity
	}
	errOpenGraphEntity = json.Unmarshal([]byte(serializedOpenGraphEntity), &toSerialize)
	if errOpenGraphEntity != nil {
		return []byte{}, errOpenGraphEntity
	}
	if o.DeletedDateTime.IsSet() {
		toSerialize["deletedDateTime"] = o.DeletedDateTime.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOpenGraphDirectoryObject struct {
	value *OpenGraphDirectoryObject
	isSet bool
}

func (v NullableOpenGraphDirectoryObject) Get() *OpenGraphDirectoryObject {
	return v.value
}

func (v *NullableOpenGraphDirectoryObject) Set(val *OpenGraphDirectoryObject) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenGraphDirectoryObject) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenGraphDirectoryObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenGraphDirectoryObject(val *OpenGraphDirectoryObject) *NullableOpenGraphDirectoryObject {
	return &NullableOpenGraphDirectoryObject{value: val, isSet: true}
}

func (v NullableOpenGraphDirectoryObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenGraphDirectoryObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


