/*
 * Open Graph API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OpenGraphIdentity struct for OpenGraphIdentity
type OpenGraphIdentity struct {
	// The identity's display name. Note that this may not always be available or up to date. For example, if a user changes their display name, the API may show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
	DisplayName NullableString `json:"displayName,omitempty"`
	// Unique identifier for the identity.
	Id *string `json:"id,omitempty"`
}

// NewOpenGraphIdentity instantiates a new OpenGraphIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenGraphIdentity() *OpenGraphIdentity {
	this := OpenGraphIdentity{}
	return &this
}

// NewOpenGraphIdentityWithDefaults instantiates a new OpenGraphIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenGraphIdentityWithDefaults() *OpenGraphIdentity {
	this := OpenGraphIdentity{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenGraphIdentity) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenGraphIdentity) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *OpenGraphIdentity) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *OpenGraphIdentity) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *OpenGraphIdentity) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *OpenGraphIdentity) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OpenGraphIdentity) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenGraphIdentity) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OpenGraphIdentity) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OpenGraphIdentity) SetId(v string) {
	o.Id = &v
}

func (o OpenGraphIdentity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableOpenGraphIdentity struct {
	value *OpenGraphIdentity
	isSet bool
}

func (v NullableOpenGraphIdentity) Get() *OpenGraphIdentity {
	return v.value
}

func (v *NullableOpenGraphIdentity) Set(val *OpenGraphIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenGraphIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenGraphIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenGraphIdentity(val *OpenGraphIdentity) *NullableOpenGraphIdentity {
	return &NullableOpenGraphIdentity{value: val, isSet: true}
}

func (v NullableOpenGraphIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenGraphIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


